name: Deploy to Staging Environment

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'git-tag'
        required: true

env:
  project-directory: ./
  node-version: '18'

jobs:
  frontend:
    name: Build Frontend Project
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, 'skip-ci')
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}
      - name: npm clean install
        run: npm ci --legacy-peer-deps
        working-directory: ${{ env.project-directory }}
      # define the endpoints for PROD in github secrets
      - name: build frontend project
        run: npm run build:staging
        working-directory: ${{ env.project-directory }}
      - uses: actions/upload-artifact@v2
        with:
          name: frontend-bundle
          path: build
  #      - name: run React tests
  #        run: npm test
  #        working-directory: ${{ env.project-directory }}

  deploy:
    name: Deploy to STAGING CDN
    runs-on: ubuntu-latest
    needs: frontend
    if: |
      github.repository == "Greenstand/${{ github.event.repository.name }}"
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}
      - name: Download bundled frontend resources
        uses: actions/download-artifact@v2
        with:
          name: frontend-bundle
          path: build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET }}
          aws-region: us-east-1
      - name: Copy front end resources to s3 bucket
        run: |
          aws s3 sync build s3://${{ secrets.STAGING_CDN_S3_BUCKET }} --delete
      - name: Invalidate cloudfront caches
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGING_CDN_DISTRIBUTION_ID }} --paths "/*"
